{% extends 'base.html.twig' %}
{% import _self as helper %}

{% macro boolValue(val) %}
    {% if val is same as(true) %} {# data.result === true, not just truthy #}
        <span class="text-success">
            <strong>&check;</strong>
        </span>
    {% elseif val is same as(false) %}
        <span class="text-danger">
            <strong>&cross;</strong>
        </span>
    {% else %}
        No results.
    {% endif %}
{% endmacro %}

{% macro blockValue(val) %}
    {% import _self as helper %}
    {% if val == 0 %}
        {{ helper.boolValue(false) }} Residential/Unclassified IP (i.e. safe IP)
    {% elseif val == 1 %}
        {{ helper.boolValue(true) }} Non-residential IP (hosting provider, proxy, etc.)
    {% else %}
        Non-residential &amp; residential IP (warning, may flag innocent people)
    {% endif %}
{% endmacro %}

{% block results %}
<hr>
<div class="panel panel-default" style="margin-top: 20px">
    <div class="panel-heading">
        <h3 class="panel-title">
            <strong>{{ hostname }}</strong>
        </h3>
		( <a href="https://tools.wmflabs.org/whois/gateway.py?lookup=true&ip={{ ip }}">whois</a> | 
		{%if ipbase != "" %}
			<a href="https://tools.wmflabs.org/ipcheck/iprange.php?ipbase={{ ipbase }}&ipstart=0&ipend=255">resolve range</a> | 
		{% endif %}
		<a href="https://bgp.he.net/ip/{{ ip }}">bgp.he.net</a> | <a href="https://talosintelligence.com/reputation_center/lookup?search={{ ip }}">talos</a> | <a href="{{ wikiurl }}/w/index.php?title=Special:Log&type=block&page=User:{{ ip }}">block log</a> | <a href="{{ wikiurl }}/w/index.php?title=Special:BlockList&action=search&ip={{ ip }}">active blocks</a> | <a href="{{ wikiurl }}/w/index.php?title=Special:GlobalBlockList&ip={{ ip }}">global blocks</a> | <a href="{{ wikiurl }}/wiki/Special:Contributions/{{ ip }}">contribs</a> | <a href="{{ wikiurl }}/w/index.php?title=Special:AbuseLog&wpSearchUser={{ ip }}">filter log</a> | <a href="{{ wikiurl }}/wiki/Special:Block/{{ ip }}?wpExpiry=1%20year&wpHardBlock=1&wpReason=other&wpReason-other=%7B%7BColocationwebhost%7D%7D+%3C%21--+ISP_NAME_HERE+%20%20Using%20[[toollabs:ipcheck|ipcheck]]--%3E">block</a> | <a href="https://meta.wikimedia.org/wiki/Special:GlobalBlock?wpAddress=8.8.4.4&wpExpiry=3+years&wpReason=[[m:NOP|Open%20proxy]]">block globally</a> )
    </div>
    <div class="panel-body">
        <table class="table">
            <thead>
                <tr>
                    <th>Service</th>
                    <th>Result</th>
                </tr>
            </thead>
            <tbody>
                {% for serviceId, data in out %}
                    <tr id="result-{{ serviceId }}">
                        <td>{{ data.title }}</td>
                        <td>
                            {##
                             # TODO: This is all a bit messy... At some point we'll want to localize the application.
                             # When we do this, the different keys in `data` can correspond to the i18n message key.
                             # This way, we can refactor all the helper.boolValue stuff, since they're all the same,
                             # and do something like:
                             #     {% foreach key in ['proxy', 'vpn', 'mobile', ...] %}
                             #         {% if data.result[key] is defined %}
                             #             {{ msg(key) }}: {{ helper.boolValue(data.result[key]) }}
                             #         {% endif %}
                             #     {% endfor %}
                             #}
                            {% if data.result is iterable and data.result is not empty %}
                                {## Things that don't use boolValue() (e.g. no tick or cross) go here #}
                                {% if data.result.isp is defined %}
                                    ISP: {{ data.result.isp }}<br/>
                                {% endif %}		
								{% if data.result.webhost is defined %}
									{% if data.result.webhost != false %}
										Likely webhost: {{ data.result.webhost }}<br/>
										{% else %}
										Not a known hosting ASN
									{% endif %}
                                {% endif %}		
								{% if data.result.cached is defined %}
									{% if data.result.cached == "yes" %}
										Cached: {{ data.result.cached }} <a href="index.php?ip={{ ip }}&refresh=true">Refresh</a><br/>
									{% endif %}
									{% if data.result.cached == "no" %}
										Cached: {{ data.result.cached }}<br/>
									{% endif %}
                                {% endif %}
								{% if data.result.city is defined %}
                                    City: {{ data.result.city }}<br/>
                                {% endif %}
								{% if data.result.state is defined %}
                                    State: {{ data.result.state }}<br/>
                                {% endif %}															
								{% if data.result.zip is defined %}
                                    Zip: {{ data.result.zip }}<br/>
                                {% endif %}								
								{% if data.result.country is defined %}
                                    Country: {{ data.result.country }}<br/>
                                {% endif %}
								{% if data.result.appears is defined %}
									{% if data.result.appears == 1 %}
										Listed, see <a href="https://www.stopforumspam.com/ipcheck/{{ ip }}">details</a><br />
										Frequency: {{ data.result.frequency }}<br />
										Last Seen: {{ data.result.lastseen }}<br />
										Confidence: {{ data.result.confidence }}<br />
										Country: {{ data.result.sfscountry }}<br />
										Delegated: {{ data.result.delegated }}
									{% else %}
										Not listed
									{% endif %}
								{% endif %}
								{% if data.result.attacks is defined %}
                                    Attacks seen: {{ data.result.attacks }}<br/>
                                {% endif %}
								
								{% if data.result.tfeeds is defined %}
                                    Appears in threat feeds: {{ data.result.tfeeds }}<br/>
                                {% endif %}

								{% if data.result.cachedate is defined %}
                                    Retreived: {{ data.result.cachedate }}<br/>
                                {% endif %}
								
								{% if data.result.cacheuntil is defined %}
                                    Cached until: {{ data.result.cacheuntil }}<br/>
                                {% endif %}
								
								{% if data.result.pctype is defined %}
                                    Type: {{ data.result.pctype }}<br/>
                                {% endif %}
								{% if data.result.riska is defined %}
                                    Risk Assessment: {{ data.result.riska }}<br/>
                                {% endif %}
								
								{% if data.result.port is defined %}
                                    Port: {{ data.result.port }}<br/>
                                {% endif %}
								
								{% if data.result.seen is defined %}
                                    Last Seen: {{ data.result.seen }}<br/>
                                {% endif %}
								
								{% if data.result.cloud is defined %}
                                    <b>{{ data.result.cloud }}</b><br/>
                                {% endif %}
								
								{% if data.cache is defined %}
                                    Cached: {{ data.cache }}<br/>
                                {% endif %}
								{% if data.result.listed is defined %}
                                    {{ helper.boolValue( data.result.listed ) }}
									{% if data.result.listed == TRUE %}
										<a href="https://www.spamcop.net/w3m?action=checkblock&ip={{ ip }}">Listed</a><br />
									{% else %}	
										Not Listed<br />
									{% endif %}	
                                {% endif %}	
                                {% if data.result.tornode is defined %}
                                        {{ helper.boolValue(data.result.tornode) }} TOR Node<br/>
                                {% endif %}
                                {% if data.result.chance %}
                                    {% if data.result.chance > 90 %}
                                        {{ helper.boolValue(true) }}
                                    {% elseif data.result.chance < 20 %}
                                        {{ helper.boolValue(false) }}
                                    {% endif %}
                                    Prediction: {{ data.result.chance }}%<br/>
                                {% endif %}
                                {% if data.result.proxy is defined %}
                                    {{ helper.boolValue(data.result.proxy) }} Proxy<br/>
                                {% endif %}
                                {% if data.result.vpn is defined %}
                                    {{ helper.boolValue(data.result.vpn) }} VPN<br/>
                                {% endif %}
                                {% if data.result.mobile is defined %}
                                    {{ helper.boolValue(data.result.mobile) }} Mobile<br/>
                                {% endif %}
                                {% if data.result.recent_abuse is defined %}
                                    {{ helper.boolValue(data.result.recent_abuse) }} Recent Abuse<br/>
                                {% endif %}
                                {% if data.result.tor is defined %}
                                    {{ helper.boolValue(data.result.tor) }} Tor<br/>
                                {% endif %}
                                {% if data.result.bot_status is defined %}
                                    {{ helper.boolValue(data.result.bot_status) }} Bot<br/>
                                {% endif %}
                                {% if data.result.fraud_score is defined %}
                                    Fraud Score: {{ data.result.fraud_score }} <br/>
                                {% endif %}								
                                {% if data.result.organization is defined %}
                                    Organization: {{ data.result.organization }}<br/>
                                {% endif %}								
                                {% if data.result.hosting is defined %}
                                    {{ helper.boolValue(data.result.hosting) }} Hosting<br/>
                                {% endif %}
                                {% if data.result.vpnOrProxy is defined %}
                                    {{ helper.boolValue(data.result.vpnOrProxy) }} VPN or proxy<br/>
                                {% endif %}
                                {% if data.result.risk is defined %}
                                    {% if data.result.risk == 'high' %}
                                        {{ helper.boolValue(true) }}
                                    {% endif %}
                                    Risk: {{ data.result.risk }}<br/>
                                {% endif %}

                                {## "Block" is sort of like a "type", so presumably there can't be both. #}
                                {% if data.result.block is defined %}
                                    {{ helper.blockValue(data.result.block) }}
                                {% elseif data.result.type %}
                                    Type: {{ data.result.type }}
                                {% endif %}

                                {## Special format for Hola (method 1) #}
                                {% for hola in data.result.holas %}
                                    {% if hola.port is defined %}
                                        Port: {{ hola.port }}<br/>
                                    {% endif %}
                                    {% if hola.country is defined %}
                                        Country: {{ hola.country|upper }}<br/>
                                    {% endif %}
                                    {% if hola.seen is defined %}
                                        Last seen: {{ hola.seen }}<br/>
                                    {% endif %}
                                {% endfor %}

                                {## 'entries' are just strings. #}
                                {% if data.result.entries is defined %}
                                    {% if data.result.entries is empty %}
                                        No results
                                    {% else %}
                                        {% for entry in data.result.entries %}
                                            {{ entry|raw }}<br/>
                                        {% endfor %}
                                    {% endif %}
                                {% endif %}
                            {% elseif data.error is defined %}
                                <span class="text-danger">
                                    <strong>Error:</strong>
                                    {{ data.error is same as(true) ? 'Uknown error. Bad IP maybe?' : data.error }}
                                </span>
                            {% else %}
                                {{ helper.boolValue(data.result) }}
                            {% endif %}
                        </td>
                    </tr>
                {% endfor %}
            </tbody>
        </table>
    </div>
</div>
{% endblock %}
